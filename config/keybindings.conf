# Using Tmux Copy mode:
#
# Enter the copy-mode: prefix [
# Navigate: h, j, k, l, w, W, b, B, {, }
# Search: ?, /
# Start highlight: v
# Yank the highlighted text: Enter
# Paste: prefix ]


# -r means that the bind can repeat without entering prefix again
# -n means that the bind doesn't use the prefix

###############################################################################
# Key Bindings
###############################################################################

# Unset default prefix
unbind C-b
unbind C-a

# Set Prefix to Ctrl+a
set-option -g prefix C-n
bind-key C-n send-prefix

# Split panes using / and v
# Start in same directory when splitting windows
bind-key '/' split-window -h -c '#{pane_current_path}'
bind-key "v" split-window -v -c '#{pane_current_path}'
unbind '"'
unbind %

# When creating a window, start at the same path
bind c new-window -c '#{pane_current_path}'

# Switch Pane positions
bind -n M-[ swap-pane -D
bind -n M-] swap-pane -U

# Switch window positions
bind -r M-"{" swap-window -d -t -1
bind -r M-"}" swap-window -d -t +1

# easier switching between next/prev window
bind-key -n M-h previous-window
bind-key -n M-l next-window

# Toggle the status bar
bind-key t set-option status

bind P paste-buffer
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi y send-keys -X rectangle-toggle
unbind -T copy-mode-vi Enter

# allow to copy to system clipboard
bind-key y run -b "tmux show-buffer | xclip -selection clipboard"\; display-message "copied tmux buffer to system clipboard"

# break pane out of window
bind-key b break-pane -d

# put pane back into window
bind-key e command-prompt -p "join pane from: "  "join-pane -h -s '%%'"

# Resizing with mouse drag
bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel 'reattach-to-user-namespace pbcopy'

# bind -T Enter copy-mode bind -n M-Enter copy-mode

# # Reload config file
bind r source-file ~/.config/tmux/tmux.conf \; display '~/.config/tmux/tmux.conf sourced'

bind-key C split-window -h "nvim ~/.config/tmux/tmux.conf"

# resizing
bind -r C-j resize-pane -D 8
bind -r C-k resize-pane -U 8
bind -r C-h resize-pane -L 8
bind -r C-l resize-pane -R 8

# show a promp to kill a window by id with prefix+X
bind-key X command-prompt -p "kill window: " "kill-window -t '%%'"

# open an application in a new window with prefix+o, and allow me to provide the app name
bind-key o command-prompt -p "open app: " "new-window '%%'"

# sessions
bind C-e display-popup -E "\
    tmux list-sessions -F '#{?session_attached,,#{session_name}}' |\
    sed '/^$/d' |\
    fzf --reverse --header jump-to-session |\
    xargs tmux switch-client -t"

# Tmux sessionizer ( see primeagen dotfiles )
# forget the find window.  That is for chumps
# bind-key -r f run-shell "tmux neww ~/.local/bin/tmux-sessionizer"

###############################################################################
# Tmux Nagivator - https://github.com/christoomey/vim-tmux-navigator
###############################################################################

is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

bind-key -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"

version_pat='s/^tmux[^0-9]*([.0-9]+).*/\1/p'
tmux_version="$(-V | sed -En "$version_pat")"
setenv -g tmux_version "$tmux_version"

bind-key -T copy-mode-vi C-h select-pane -L
bind-key -T copy-mode-vi C-j select-pane -D
bind-key -T copy-mode-vi C-k select-pane -U
bind-key -T copy-mode-vi C-l select-pane -R

###############################################################################
# Popup keymaps
###############################################################################

# Open todo inside popup
bind -r n display-popup -d "#{pane_current_path}" -E -w 50% -h 90% "[[ -e todo.norg ]] && nvim todo.norg || cd ~/notes && nvim todo.norg"

# Open Lazygit inside popup
bind -r g display-popup -d '#{pane_current_path}' -E -w 90% -h 90% "lazygit -ucd ~/.config/lazygit/"

# Open ranger popup
bind -r f display-popup -d '#{pane_current_path}' -E -w 90% -h 90% "ranger"

# bind -r w display-popup -d '#{pane_current_path}' -w 90% -h 90% # Create new popup scratch window

bind-key z display-popup -w 90% -h 90% -E "htop"

